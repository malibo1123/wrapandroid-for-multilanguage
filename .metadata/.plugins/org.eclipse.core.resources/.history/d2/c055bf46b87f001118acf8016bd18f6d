package com.srplab.wrapandroid;

import android.app.Activity;
import android.os.Bundle;
import android.content.Context;
import android.content.res.AssetManager;
import android.widget.*;
import android.view.*;
import android.widget.LinearLayout;
import android.widget.AbsoluteLayout.LayoutParams;
import android.util.*;
import android.widget.RadioGroup.OnCheckedChangeListener;
import android.net.Uri;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;
import java.util.Stack;

import com.srplab.www.starcore.*;

/**
 * 
 * @author srplab
 *
 */

public class ViewGroupClass{
	/**
	 * @note do not call Init method directly
	 */	
	static public boolean Init(StarServiceClass In_Service,StarSrvGroupClass In_SrvGroup,boolean In_DumpInformationFlag){
		final StarSrvGroupClass SrvGroup = In_SrvGroup;
		final StarServiceClass Service = In_Service;	
		final boolean DumpInformationFlag = In_DumpInformationFlag;
		WrapAndroidClass.DumpInformation(SrvGroup, DumpInformationFlag, "init ViewGroupClass");
		
        /* ViewGroupClass Body */
        Service._GetObject("ViewGroupClass")._Assign(new StarObjectClass(){       	
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void addView(StarObjectClass self,StarObjectClass child) </td></tr>
        	 *   </table>
        	 * </div>
        	 * @note child will be freed with viewgroup
        	 */
        	public void addView(StarObjectClass self,StarObjectClass child){
        		ViewGroup viewgroup = (ViewGroup)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( viewgroup != null && child != null ){
        			View view = (View)WrapAndroidClass.GetAndroidObject(child,"AndroidObject");
        			viewgroup.addView(view);
        			child._LockGC();
        			child._Call("decAndroidRef");  // release with parent
        		}        			
        	}
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public StarObjectClass  getChildAt(StarObjectClass self,int index) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public StarObjectClass  getChildAt(StarObjectClass self,int index) {
        		ViewGroup viewgroup = (ViewGroup)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( viewgroup != null ){
        			View view = viewgroup.getChildAt(index);
        			if( view == null || !(view instanceof BasicAndroidInterface) )
        				return null;
        			return ((BasicAndroidInterface)view).getBasicAndroid().getStarObject();
        		}
        		return null;
        	}        	
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void  recomputeViewAttributes(StarObjectClass self,StarObjectClass child) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void  recomputeViewAttributes(StarObjectClass self,StarObjectClass child){
        		ViewGroup viewgroup = (ViewGroup)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( viewgroup != null && child != null ){
        			View view = (View)WrapAndroidClass.GetAndroidObject(child,"AndroidObject");
        			viewgroup.recomputeViewAttributes(view);
        		}        			
        	} 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void  removeView(StarObjectClass self,StarObjectClass view) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void  removeView(StarObjectClass self,StarObjectClass view){
        		ViewGroup viewgroup = (ViewGroup)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( viewgroup != null && view != null ){
        			View android_view = (View)WrapAndroidClass.GetAndroidObject(view,"AndroidObject");
        			viewgroup.removeView(android_view);
        		}        			
        	}  
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void  removeAllViews(StarObjectClass self) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void  removeAllViews(StarObjectClass self){
        		ViewGroup viewgroup = (ViewGroup)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( viewgroup != null )
        			viewgroup.removeAllViews();
        	} 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void  refreshDrawableState(StarObjectClass self) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void  refreshDrawableState(StarObjectClass self){
        		ViewGroup viewgroup = (ViewGroup)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( viewgroup != null )
        			viewgroup.refreshDrawableState();
        	} 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public boolean  requestFocus(StarObjectClass self) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public boolean  requestFocus(StarObjectClass self){
        		ViewGroup viewgroup = (ViewGroup)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( viewgroup != null )
        			return viewgroup.requestFocus();
        		return false;
        	}  
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public boolean  requestFocus1(StarObjectClass self,int direction) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public boolean  requestFocus1(StarObjectClass self,int direction){
        		ViewGroup viewgroup = (ViewGroup)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( viewgroup != null )
        			return viewgroup.requestFocus(direction);
        		return false;
        	}  
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public boolean  requestFocusFromTouch(StarObjectClass self) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public boolean  requestFocusFromTouch(StarObjectClass self){
        		ViewGroup viewgroup = (ViewGroup)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( viewgroup != null )
        			return viewgroup.requestFocusFromTouch();
        		return false;
        	}  
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">ppublic void  requestLayout(StarObjectClass self) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void  requestLayout(StarObjectClass self){
        		ViewGroup viewgroup = (ViewGroup)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( viewgroup != null )
        			viewgroup.requestLayout();
        		return;
        	}  
      	
        });    
        
		return true;
	}	
}