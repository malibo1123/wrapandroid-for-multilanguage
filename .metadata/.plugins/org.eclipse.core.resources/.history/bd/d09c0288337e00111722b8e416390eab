package com.srplab.wrapandroid;

import android.app.Activity;
import android.os.Bundle;
import android.content.Context;
import android.content.res.AssetManager;
import android.widget.*;
import android.view.*;
import android.widget.LinearLayout;
import android.widget.AbsoluteLayout.LayoutParams;
import android.util.*;
import android.widget.RadioGroup.OnCheckedChangeListener;
import android.net.Uri;
import android.graphics.Matrix;
import android.graphics.drawable.*;
import android.graphics.Bitmap;

import java.io.IOException;
import java.io.InputStream;
import java.util.Hashtable;
import java.util.Stack;

import com.srplab.www.starcore.*;

/**
 * 
 * @author srplab
 *
 */

public class ImageViewClass{
	/**
	 * @note do not call Init method directly
	 */	
	static public boolean Init(StarServiceClass In_Service,StarSrvGroupClass In_SrvGroup,boolean In_DumpInformationFlag){
		final StarSrvGroupClass SrvGroup = In_SrvGroup;
		final StarServiceClass Service = In_Service;	
		final boolean DumpInformationFlag = In_DumpInformationFlag;
		WrapAndroidClass.DumpInformation(SrvGroup, DumpInformationFlag, "init ImageViewClass");

		class StarCLEImageView extends ImageView implements BasicAndroidInterface{
			private BasicAndroidClass BasicAndroidObject;         			        			
			public StarCLEImageView(Context ctx,StarObjectClass In_Object){
				super(ctx);
				BasicAndroidObject = new BasicAndroidClass();
				BasicAndroidObject.setStarObject(In_Object);
			}
			public BasicAndroidClass getBasicAndroid(){return BasicAndroidObject;};
			public Object GetAndroidObject(){return this;}
			public void SetAndroidObject(Object object){SrvGroup._PrintError(1, "ImageViewClass not support SetAndroidObject" );}																																	
			protected void finalize(){
				StarObjectClass starobject = BasicAndroidObject.getStarObject();
				if( starobject != null )
					starobject._Free();
			}
		}	

        /* ImageViewClass Body */
        Service._GetObject("ImageViewClass")._Assign(new StarObjectClass(){
        	/* onCreateAndroid function */
        	public void onCreateAndroid( StarObjectClass self ){
        		StarObjectClass parent = (StarObjectClass)self._Get("_Parent");
        		StarObjectClass activity = (StarObjectClass)self._Call("getActivity");        		
        		StarCLEImageView imageview = new StarCLEImageView((Activity)WrapAndroidClass.GetAndroidObject(activity,"AndroidObject"),self);
        		WrapAndroidClass.SetAndroidObject(self,"AndroidObject",(Object)imageview);
        		if( parent != null ){
        			if( activity == parent ){
        				Activity android_activity = (Activity)WrapAndroidClass.GetAndroidObject(parent,"AndroidObject");
        				android_activity.setContentView(imageview);
        			}else{
        				ViewGroup android_viewgroup = (ViewGroup)WrapAndroidClass.GetAndroidObject(parent,"AndroidObject");
        				android_viewgroup.addView(imageview);
        			}
        			self._LockGC();
        			self._Call("decAndroidRef");  // release with parent
        		}
        		return;
        	}
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageResource(StarObjectClass self,int resid) </td></tr>
        	 *   </table>
        	 * </div>
        	 */        	
        	public void  clearColorFilter(StarObjectClass self)  
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageResource(StarObjectClass self,int resid) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public int  getBaseline(StarObjectClass self) 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageResource(StarObjectClass self,int resid) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public boolean  getBaselineAlignBottom(StarObjectClass self) 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageResource(StarObjectClass self,int resid) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public Drawable  getDrawable(StarObjectClass self) 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageResource(StarObjectClass self,int resid) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public Matrix  getImageMatrix(StarObjectClass self) 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageResource(StarObjectClass self,int resid) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public ImageView.ScaleType  getScaleType(StarObjectClass self) 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageResource(StarObjectClass self,int resid) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void  invalidateDrawable(StarObjectClass self,Drawable dr) 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageResource(StarObjectClass self,int resid) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void  jumpDrawablesToCurrentState(StarObjectClass self) 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageResource(StarObjectClass self,int resid) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void  setAdjustViewBounds(StarObjectClass self,boolean adjustViewBounds) 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageResource(StarObjectClass self,int resid) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void  setAlpha(StarObjectClass self,int alpha)  
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageResource(StarObjectClass self,int resid) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void  setBaseline(StarObjectClass self,int baseline) 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageResource(StarObjectClass self,int resid) </td></tr>
        	 *   </table>
        	 * </div>
        	 */        	 
        	public void  setBaselineAlignBottom(StarObjectClass self,boolean aligned) 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void  setColorFilter(StarObjectClass self,int color) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void  setColorFilter(StarObjectClass self,int color){
        		ImageView imagview = (ImageView)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( imagview != null )
        			imagview.setColorFilter(color);
        	} 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageResource(StarObjectClass self,int resid) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void  setImageBitmap(StarObjectClass self,StarObjectClass bm){
        		ImageView imagview = (ImageView)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( imagview != null || bm == null ){
        			BasicAndroidInterface androidinterface = (BasicAndroidInterface)WrapAndroidClass.GetAndroidObject(bm,"AndroidObject");
        			imagview.setImageBitmap((Bitmap)androidinterface.GetAndroidObject());
        			bm._LockGC();
        			bm._Call("decAndroidRef");  // release with parent        			
        		}
        	}  
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void  setImageDrawable(StarObjectClass self,StarObjectClass drawable) </td></tr>
        	 *   </table>
        	 * </div>
        	 * @param drawable will be freed with imageview
        	 */
        	public void  setImageDrawable(StarObjectClass self,StarObjectClass drawable){
        		ImageView imagview = (ImageView)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( imagview != null || drawable == null ){
        			BasicAndroidInterface androidinterface = (BasicAndroidInterface)WrapAndroidClass.GetAndroidObject(drawable,"AndroidObject");
        			imagview.setImageDrawable((Drawable)androidinterface.GetAndroidObject());
        			drawable._LockGC();
        			drawable._Call("decAndroidRef");  // release with parent        			
        		}
        	} 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void  setImageLevel(StarObjectClass self,int level) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void  setImageLevel(StarObjectClass self,int level){
        		ImageView imagview = (ImageView)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( imagview != null )
        			imagview.setImageLevel(level);
        	}  
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void  setImageMatrix(StarObjectClass self,StarObjectClass matrix) </td></tr>
        	 *   </table>
        	 * </div>
        	 * @param matrix will be freed with imageview
        	 */
        	public void  setImageMatrix(StarObjectClass self,StarObjectClass matrix){
        		ImageView imagview = (ImageView)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( imagview != null || matrix == null ){
        			StarCLEMatrix star_matrix = (StarCLEMatrix)WrapAndroidClass.GetAndroidObject(matrix,"AndroidObject");
        			imagview.setImageMatrix((Matrix)star_matrix.GetAndroidObject());
        			matrix._LockGC();
        			matrix._Call("decAndroidRef");  // release with parent        			
        		}
        	}         	
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageResource(StarObjectClass self,int resid) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void setImageResource(StarObjectClass self,int resid){
        		if( resid == 0 )
        			return;
        		ImageView imagview = (ImageView)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( imagview != null )
        			imagview.setImageResource(resid);
        	} 
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setImageURI(StarObjectClass self,String uri) </td></tr>
        	 *   </table>
        	 * </div>
        	 */
        	public void setImageURI(StarObjectClass self,String uri){
        		if( uri == null )
        			return;
        		ImageView imagview = (ImageView)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( imagview == null )
        			return;
        		Uri imgUri=Uri.parse(uri);
        		imagview.setImageURI(imgUri);
        	}    
        	/**
        	 * <div class="memproto">
        	 *   <table class="memname">
        	 *     <tr><td class="memname">public void setScaleType(StarObjectClass self,String scaleType) </td></tr>
        	 *   </table>
        	 * </div>
        	 * @param scaleType  "CENTER","CENTER_CROP","CENTER_INSIDE","FIT_CENTER","FIT_START","FIT_XY","MATRIX"
        	 */
        	public void setScaleType(StarObjectClass self,String scaleType){
        		ImageView imagview = (ImageView)WrapAndroidClass.GetAndroidObject(self,"AndroidObject");
        		if( imagview != null ){
        			if( scaleType.equals("CENTER"))
        				imagview.setScaleType(ImageView.ScaleType.CENTER);
        			else if( scaleType.equals("CENTER_CROP"))
        				imagview.setScaleType(ImageView.ScaleType.CENTER_CROP);
        			else if( scaleType.equals("CENTER_INSIDE"))
        				imagview.setScaleType(ImageView.ScaleType.CENTER_INSIDE);        				
        			else if( scaleType.equals("FIT_CENTER"))
        				imagview.setScaleType(ImageView.ScaleType.FIT_CENTER);        				
        			else if( scaleType.equals("FIT_END"))
        				imagview.setScaleType(ImageView.ScaleType.FIT_END);        				
        			else if( scaleType.equals("FIT_START"))
        				imagview.setScaleType(ImageView.ScaleType.FIT_START);        				
        			else if( scaleType.equals("FIT_XY"))
        				imagview.setScaleType(ImageView.ScaleType.FIT_XY);        				
        			else if( scaleType.equals("MATRIX"))
        				imagview.setScaleType(ImageView.ScaleType.MATRIX);        				        		
        		}
        	}         	
        });        
        
		return true;
	}	
}